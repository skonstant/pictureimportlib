apply plugin: 'com.android.library'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.3"

	defaultConfig {
		minSdkVersion 10
		targetSdkVersion 23
		versionCode 1
		versionName "1.5"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	testCompile 'junit:junit:4.12'
	compile "com.android.support:support-v4:23.4.0"
	compile 'com.squareup.picasso:picasso:2.5.2'
}

ext {
	bintrayRepo = 'maven'
	bintrayName = 'pictureimportlib'

	publishedGroupId = 'com.vol'
	libraryName = 'PictureImportLib'
	artifact = 'pictureimportlib'

	libraryDescription = 'Drop in library to import pictures from documents, gallery and camera. No permission needed. Cropping supported.'

	siteUrl = 'https://github.com/skonstant/pictureimportlib'
	gitUrl = 'https://github.com/skonstant/pictureimportlib.git'

	libraryVersion = '1.4'

	developerId = 'skonstant'
	developerName = 'St√©phane Konstantaropoulos'
	developerEmail = 'stephane@voyageonline.co.uk'

	licenseName = 'The Apache Software License, Version 2.0'
	licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	allLicenses = ["Apache-2.0"]
}

// Place it at the end of the file
apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from android.sourceSets.main.java.srcDirs
	}
} else { // Java libraries
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
}

artifacts {
	archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
	repositories.mavenInstaller {
		// This generates POM.xml with proper parameters
		pom {
			project {
				packaging 'aar'
				groupId publishedGroupId
				artifactId artifact

				// Add your description here
				name libraryName
				description libraryDescription
				url siteUrl

				// Set your license
				licenses {
					license {
						name licenseName
						url licenseUrl
					}
				}
				developers {
					developer {
						id developerId
						name developerName
						email developerEmail
					}
				}
				scm {
					connection gitUrl
					developerConnection gitUrl
					url siteUrl

				}
			}
		}
	}
}

bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")

	configurations = ['archives']
	pkg {
		repo = bintrayRepo
		name = bintrayName
		desc = libraryDescription
		websiteUrl = siteUrl
		vcsUrl = gitUrl
		licenses = allLicenses
		publish = true
		publicDownloadNumbers = true
		version {
			desc = libraryDescription
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = properties.getProperty("bintray.gpg.password")
				//Optional. The passphrase for GPG signing'
			}
		}
	}
}
